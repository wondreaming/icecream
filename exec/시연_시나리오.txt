* 수정해야될 거
- 백엔드 기술 소개 추가
- 임시로 넣은 피그마 이미지랑 빈 이미지들 넣어야함
- 앱 시연, 야외 시연 화면 토의

p1
HBS팀 발표 시작하겠다

p2
발표 순서는 이렇다

p4
ucc부터 보고 출발하자

p6
다음으로 팀원 소개다
~~ 빠르게 소개

p7
당신의 아이는 안전한가요?
우리 프로젝트가 시작된 가장 근본적인 질문이다

p8
문철이햄TV에서 가져온 2개의 영상이다
왼쪽 영상부터 보면 어린이 보호구역에서 일어난 끔찍한 사고다
영상 하단에 빨간 동그라미를 보면 운전자는 규정 속도를 잘 준수하고 있음에도 아이의 겁없는 무단 횡단으로 인해 큰 사고가 일어났다
다음으로 오른쪽 영상을 보면 이번엔 반대로 어린이 보호구역에서 보행자는 횡단보도를 이용해 천천히 길을 건너고 있지만 앞차까지 앞지르며 과속하는 차량으로 인해서 큰 사고가 날 뻔한 모습이다.

p9
자 오케이 그래서 왜 아이스크림이냐?
우리의 서비스명은 니들이 아는 그 아이스크림이 아니라, 

p10
아이 스크림이다

p11
아이가 위험할 때 아이에게 소리쳐 주겠다는 뜻으로 만든 서비스명이다. 언어 유희를 이용해 서비스 로고는 아이스크림 모양으로 만들었지만 여기서 잘 보면 아이스크림이 신호등 색깔로 맛있게 쌓여있는 걸 볼 수 있다.

p12
우리 서비스의 가장 메인이 되는 목적 2가지는
스쿨존 내 교통사고 예방
아이들의 횡단보도 사용 유도다

p13
우리 아키텍처 다이어그램인데 우리 리드미에서도 볼 수 있고 어차피 발표에서 이건 크게 눈에 안 들어올테니 잠깐만 보여주고 넘기겠다

p15
자 첫번째 소개할 주요 기능은 스쿨존 내 교통사고 예방이다. 흐름을 하나씩 소개해주자면
처음으로 GPS를 활용해 자녀의 위치 정보를 확보한다.
그리고 CCTV 영역을 기준으로 차량이 과속하게 되면 사고 위험이 있는 지역을 과속 알림 영역으로 매핑한다

p16
AI를 통해 CCTV 영상으로 차량 속도를 측정해서 과속이 발생하게 되면 서버로 그 데이터를 전송한다

p17
마지막으로 자녀의 스마트폰과 스마트워치로 과속 알림을 전송해줄거다

p18
다음 주요 기능은 아이들의 횡단보도 사용 유도다.
우리는 지오펜싱 기술을 활용해서 지오펜스 영역 침범 시 무단 횡단으로 간주할 거다

p19
자 여기서 잘 모르는 놈들을 위해 지오펜싱에 대해 간단히 설명해주면
가상의 지리적 경계를 설정해서
그 범위에 디바이스가 들어오거나 나갈 때
특정 동작이나 알림을 발생시키는 기술을 뜻한다.
여기서 일반적인 데이터베이스로는 영역 자체를 저장할 수 없기 때문에
우리는 포스트그리의 포스트GIS라는 확장을 사용해서 영역 저장과 더불어 영역 내에 GPS 좌표가 포함되는지 SQL 쿼리문으로 조회를 한다

p20
이어서 우리 서비스를 통해 안전 보행 목표를 설정하고 목표 달성 시 부모가 자녀에게 리워드를 지급할 수 있게 서비스 로직을 구성했다

p21
서비스 개요인데, 뒤에서 애플리케이션을 직접 다 시연할꺼기 때문에 주요 화면만 빠르게 안내하고 넘기겠다.

p22~29
빠른 안내

p30
자 우리의 기술 소개다 AI부터 소개할텐데

p31
우리 ai 기술 소개에 앞서 기존의 단속 카메라들이 차량의 속도를 측정하는 방법에 대해서 먼저 알려주자면
니들이 도로에서 제일 많이보는 고정식 단속 카메라는 카메라 전방 2~30m 앞 지면에 2번 센서, 2번 센서의 2~30m 앞 지면에 1번 센서가 있고 차량이 1번 센서를 지나 2번 센서에 도달하면 시간을 통해 과속이 판단되면 카메라는 번호판 촬영만 한다.
그리고 이동식 단속 카메라는 스피드 건 방식으로 레이저를 차량에 쏴서 레이저가 돌아오는 시간을 통해 차량의 속도를 측정한다.

p32
자 너희 필드트립 가서 영감 많이 얻고 왔냐? 우리 팀도 프로젝트에 영감을 얻기 위해 부산 스마트시티 전시관을 다녀왔다. 그런데 그곳에 이미 스쿨존 보행안전 서비스라는 게 존재했고 스마트 CCTV로 속도를 잰다길래 담당자한테 물어보니까 스쿨존 보행안전 서비스도 결국 기존 고정식 단속 카메라에 레이저 장치만 추가 설치한 형태였다.

p33
그래서 고민했다
장비의 추가 설치 없이 CCTV 영상만으로 차량의 속도를 측정할 수는 없을까?

p34
그래서 우리의 AI 기술을 소개하겠다
설명을 시작하면 먼저 CCTV 영상에 4개의 기준점을 잡고 해당 기준점의 실제 위도, 경도를 알아낸다. 그리고 OpenCV를 이용해 해당 기준점의 영상 내 픽셀 좌표와 실제 위도, 경도를 매핑시켜 해당 CCTV 구도의 원근 변환 행렬을 구한다.

p35
다음 욜로를 이용해 CCTV 영상에서 객체를 바운딩 박스로 감지하고, 감지한 객체 중에서 차량 객체만 따로 분류한다.

p36
차량별 바운딩 박스의 중심 좌표를 앞에서 구한 원근 변환 행렬을 이용해 실제 세계 위도, 경도로 변환한다. 같은 차량에 대해서, 구한 위도, 경도를 유클리드 거리를 이용해서 프레임 간 이동 거리를 계산한다.

p37
백엔드 서버로부터 CCTV 영상을 전송받는 FPS를 통해 프레임 간 시간은 알고 있다. 그 거리와 시간을 이용해서 실시간으로 차량의 속도를 측정했다.

p39
프론트엔드에서 먼저 말해줄거는 기본에 가장 충실했다는 점이다. 기능별로 구조를 설계해서 후에 유지 보수가 용이하도록 했으며, 컴포넌트를 최대한 촬용해서 코드를 단순화하고 구조의 일관성을 유지시키기 위해 노력했다.

p40
다음으로 CCTV 페이지와 관리자 페이지 제작을 통해 클라이언트 사이드 렌더링과 더불어 서버 사이드 렌더링까지 구현했다.

p41
마지막으로 자녀의 회원 가입을 QR 코드로 진행하고 디바이스 ID로 자동 로그인을 구현함으로써 사용자의 UI/UX적인 측면을 많이 고려했다.