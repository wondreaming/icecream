<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <h1>CCTV 송출</h1>
    <video id="video" autoplay></video>
    <script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>
    <script>
      const socket = io();

      // 웹캠 접근 요청
      navigator.mediaDevices
        .getUserMedia({ video: { width: { ideal: 640 }, height: { ideal: 480 }, facingMode: "environment" } })
        .then(stream => {
          const video = document.getElementById("video");
          video.srcObject = stream;
          video.onloadedmetadata = () => {
            video.width = video.videoWidth;
            video.height = video.videoHeight;
            console.log(video.width, video.height);
          };
          video.play();

          // 스트림을 캔버스에 그리고 이미지 데이터를 서버에 전송
          const canvas = document.createElement("canvas");
          const ctx = canvas.getContext("2d");

          setInterval(() => {
            canvas.width = 640;
            canvas.height = 480;
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
            canvas.toBlob(blob => {
              if (!blob) {
                console.error("canvas.toBlob failed");
                return;
              }
              const reader = new FileReader();
              reader.readAsArrayBuffer(blob);
              reader.onloadend = () => {
                const byteArray = new Uint8Array(reader.result);
                socket.emit("sendCCTVImage", {
                  CCTVImage: byteArray,
                  CCTVName: "CCTV 위치",
                });
              };
            }, "image/jpeg");
          }, 1000 / 10); // 매 초마다 이미지 전송
        })
        .catch(error => {
          console.error("Camera access denied:", error);
        });
    </script>
  </body>
</html>
